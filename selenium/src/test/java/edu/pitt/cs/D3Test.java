// Generated by Selenium IDE
package edu.pitt.cs;

import static org.hamcrest.MatcherAssert.assertThat;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class D3Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;

  @Before
  public void setUp() {
    ChromeOptions options = new ChromeOptions();
    options.addArguments("--headless");
    driver = new ChromeDriver(options);
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }

  @After
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void tEST1LINKS() {
    driver.get("http://localhost:8080/");
    {
      WebElement element = driver.findElement(By.linkText("Reset"));
      String attribute = element.getAttribute("href");
      vars.put("resetHref", attribute);
    }
    assertEquals(vars.get("resetHref").toString(), "http://localhost:8080/reset");
  }

  @Test
  public void tEST2RESET() {
    driver.get("http://localhost:8080/");
    js.executeScript("document.cookie = \"1=true\";document.cookie = \"2=true\";document.cookie = \"3=true\";");
    driver.findElement(By.linkText("Reset")).click();
    assertThat(driver.findElement(By.id("cat-id1")).getText(), is("ID 1. Jennyanydots"));
    assertThat(driver.findElement(By.id("cat-id2")).getText(), is("ID 2. Old Deuteronomy"));
    assertThat(driver.findElement(By.id("cat-id3")).getText(), is("ID 3. Mistoffelees"));
  }

  @Test
  public void tEST4LISTING() {
    driver.get("http://localhost:8080/");
    driver.findElement(By.linkText("Catalog")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[@id=\'cat-id3\']")));
    }
    vars.put("count", driver.findElements(By.xpath("//div[@id=\'listing\']//li[@class=\'list-group-item\']")).size());
    assertEquals(vars.get("count").toString(), "3");
    vars.put("third",
        driver.findElement(By.xpath("(//div[@id=\'listing\']//li[@class=\'list-group-item\'])[3]")).getText());
    assertEquals(vars.get("third").toString(), "ID 3. Mistoffelees");
  }

  @Test
  public void tEST3CATALOG() {
    driver.get("http://localhost:8080/");
    driver.findElement(By.linkText("Catalog")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("(//img)[2]")));
    }
    {
      WebElement element = driver.findElement(By.xpath("(//img)[2]"));
      String attribute = element.getAttribute("src");
      vars.put("image", attribute);
    }
    assertEquals(vars.get("image").toString(), "http://localhost:8080/images/cat2.jpg");
  }

  @Test
  public void tEST5RENTACAT() {
    driver.get("http://localhost:8080/");
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Rent-A-Cat")));
    }
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".form-group:nth-child(3) .btn")));
    }
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".form-group:nth-child(4) .btn")));
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".form-group:nth-child(3) .btn"));
      assert (elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".form-group:nth-child(4) .btn"));
      assert (elements.size() > 0);
    }
  }

  @Test
  public void tEST6RENT() {
    driver.get("http://localhost:8080/");
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".form-group:nth-child(3) .btn")));
    }
    driver.findElement(By.id("rentID")).sendKeys("1");
    driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
    assertThat(driver.findElement(By.id("cat-id1")).getText(), is("Rented out"));
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("rentResult")));
    }
    vars.put("first",
        driver.findElement(By.xpath("(//div[@id=\'listing\']//li[@class=\'list-group-item\'])[1]")).getText());
    vars.put("second",
        driver.findElement(By.xpath("(//div[@id=\'listing\']//li[@class=\'list-group-item\'])[2]")).getText());
    vars.put("third",
        driver.findElement(By.xpath("(//div[@id=\'listing\']//li[@class=\'list-group-item\'])[3]")).getText());
    assertThat(driver.findElement(By.id("rentResult")).getText(), is("Success!"));
    assertEquals(vars.get("first").toString(), "Rented out");
    assertThat(driver.findElement(By.id("cat-id2")).getText(), is("ID 2. Old Deuteronomy"));
    assertEquals(vars.get("second").toString(), "ID 2. Old Deuteronomy");
    assertThat(driver.findElement(By.id("cat-id3")).getText(), is("ID 3. Mistoffelees"));
    assertEquals(vars.get("third").toString(), "ID 3. Mistoffelees");
  }

  @Test
  public void tEST7RETURN() {
    driver.get("http://localhost:8080/");
    js.executeScript("document.cookie=\"2=true\";");
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".form-group:nth-child(4) .btn")));
    }
    driver.findElement(By.id("returnID")).sendKeys("2");
    driver.findElement(By.cssSelector(".form-group:nth-child(4) .btn")).click();
    assertThat(driver.findElement(By.id("cat-id1")).getText(), is("ID 1. Jennyanydots"));
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("returnResult")));
    }
    vars.put("first",
        driver.findElement(By.xpath("(//div[@id=\'listing\']//li[@class=\'list-group-item\'])[1]")).getText());
    vars.put("second",
        driver.findElement(By.xpath("(//div[@id=\'listing\']//li[@class=\'list-group-item\'])[2]")).getText());
    vars.put("third",
        driver.findElement(By.xpath("(//div[@id=\'listing\']//li[@class=\'list-group-item\'])[3]")).getText());
    assertThat(driver.findElement(By.id("returnResult")).getText(), is("Success!"));
    assertEquals(vars.get("first").toString(), "ID 1. Jennyanydots");
    assertThat(driver.findElement(By.id("cat-id2")).getText(), is("ID 2. Old Deuteronomy"));
    assertEquals(vars.get("second").toString(), "ID 2. Old Deuteronomy");
    assertThat(driver.findElement(By.id("cat-id3")).getText(), is("ID 3. Mistoffelees"));
    assertEquals(vars.get("third").toString(), "ID 3. Mistoffelees");
  }

  @Test
  public void tEST8FEEDACAT() {
    driver.get("http://localhost:8080/");
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".btn")));
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".btn"));
      assert (elements.size() > 0);
    }
  }

  @Test
  public void tEST9FEED() {
    driver.get("http://localhost:8080/");
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Feed-A-Cat")));
    }
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("catnips")));
    }
    driver.findElement(By.id("catnips")).sendKeys("6");
    driver.findElement(By.xpath("//button[contains(text(),\'Feed\')]")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("feedResult")));
    }
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.textToBe(By.id("feedResult"), "Nom, nom, nom."));
    }
    vars.put("result", driver.findElement(By.id("feedResult")).getText());
    assertThat(driver.findElement(By.id("feedResult")).getText(), is("Nom, nom, nom."));
  }

  @Test
  public void tEST10GREETACAT() {
    driver.get("http://localhost:8080/");
    driver.findElement(By.linkText("Greet-A-Cat")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("#greeting > h4")));
    }
    assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow!Meow!Meow!"));
  }

  @Test
  public void tEST11GREETACATWITHNAME() {
    driver.get("http://localhost:8080/greet-a-cat/Jennyanydots");
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("#greeting > h4")));
    }
    assertThat(driver.findElement(By.cssSelector("#greeting > h4")).getText(), is("Meow! from Jennyanydots."));
  }

  // @Test
  public void dEFECT1FUNFEEDACAT() {
    driver.get("http://localhost:8080/");
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[3]/div")));
    }
    driver.findElement(By.xpath("//input[@id=\'catnips\']")).sendKeys("-3");
    driver.findElement(By.xpath("//button[contains(.,\'Feed\')]")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions
          .visibilityOfElementLocated(By.xpath("//div[@id=\'feedResult\' and text()= \'Nom, nom, nom.\']")));
    }
    vars.put("result", driver.findElement(By.xpath("//div[@id=\'feedResult\']")).getText());
    assertEquals(vars.get("result").toString(), "Cat fight!");
  }

  // @Test
  public void dEFECT2FUNGREETACAT() {
    driver.get("http://localhost:8080/");
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    js.executeScript("document.cookie = \"1=true\";document.cookie = \"2=false\";document.cookie = \"3=false\";");
    driver.findElement(By.linkText("Greet-A-Cat")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[2]/h4")));
    }
    vars.put("result", driver.findElement(By.cssSelector("#greeting > h4")).getText());
    assertEquals(vars.get("result").toString(), "Meow!Meow!");
  }

  // @Test
  public void dEFECT3FUNGREETACAT() {
    driver.get("http://localhost:8080/");
    js.executeScript("document.cookie = \"1=true\";document.cookie = \"2=false\";document.cookie = \"3=false\";");
    driver.get("http://localhost:8080//greet-a-cat/Jennyanydots");
    {
      WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/div[2]")));
    }
    vars.put("result", driver.findElement(By.xpath("//div/div[2]")).getText());
    assertEquals(vars.get("result").toString(), "Jennyanydots is not here.");
  }
}
